local a = require(game:GetService("StarterPlayer").StarterPlayerScripts["TSFL Client"].Modules.BallNetworking)
local b = require(game.Players.LocalPlayer.PlayerScripts["TSFL Client"].Modules.BallNetworking)

hookfunction(b.IsDistanceTooBig, function() return false end)
hookfunction(a.IsDistanceTooBig, function() return false end)
hookfunction(b.VerifyHit, function() return false end)
hookfunction(a.VerifyHit, function() return false end)
hookfunction(b.IsBallBoundingHitbox, function() return true end)
hookfunction(a.IsBallBoundingHitbox, function() return true end)

local function c(d)
    return string.match(d, "^%x%x%x%x%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%x%x%x%x%x%x%x%x$") ~= nil
end

local function e()
    local f = workspace:FindFirstChild("Balls")
    if not f then return {} end
    local g = {}
    for _, h in ipairs(f:GetDescendants()) do
        if h:IsA("BasePart") and c(h.Name) then
            table.insert(g, h)
        end
    end
    return g
end

local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")

local reachDistance = 15
local reachDistanceMax = 125
local reachEnabled = true
local boxEnabled = false

-- GUI Kısmı --
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ReachGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 150)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Parent = ScreenGui
mainFrame.ClipsDescendants = true
mainFrame.Active = true
mainFrame.Draggable = true

local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Text = "Reach"
titleLabel.TextColor3 = Color3.new(1,1,1)
titleLabel.BackgroundTransparency = 1
titleLabel.Size = UDim2.new(1, -110, 1, 0)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.Parent = titleBar

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 50, 1, 0)
closeBtn.Position = UDim2.new(1, -50, 0, 0)
closeBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
closeBtn.Text = "Close"
closeBtn.TextColor3 = Color3.new(1,1,1)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 14
closeBtn.Parent = titleBar

local minimized = false
closeBtn.MouseButton1Click:Connect(function()
    if not minimized then
        mainFrame.Size = UDim2.new(0, 150, 0, 30)
        minimized = true
    else
        mainFrame.Size = UDim2.new(0, 300, 0, 150)
        minimized = false
    end
end)

local enableReachToggle = Instance.new("TextButton")
enableReachToggle.Size = UDim2.new(0, 120, 0, 30)
enableReachToggle.Position = UDim2.new(0, 10, 0, 40)
enableReachToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
enableReachToggle.TextColor3 = Color3.new(1,1,1)
enableReachToggle.Font = Enum.Font.GothamBold
enableReachToggle.TextSize = 16
enableReachToggle.Text = "Reach: ON"
enableReachToggle.Parent = mainFrame

enableReachToggle.MouseButton1Click:Connect(function()
    reachEnabled = not reachEnabled
    if reachEnabled then
        enableReachToggle.Text = "Reach: ON"
        enableReachToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    else
        enableReachToggle.Text = "Reach: OFF"
        enableReachToggle.BackgroundColor3 = Color3.fromRGB(120, 30, 30)
    end
end)

local boxToggle = Instance.new("TextButton")
boxToggle.Size = UDim2.new(0, 120, 0, 30)
boxToggle.Position = UDim2.new(0, 160, 0, 40)
boxToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
boxToggle.TextColor3 = Color3.new(1,1,1)
boxToggle.Font = Enum.Font.GothamBold
boxToggle.TextSize = 16
boxToggle.Text = "3D Box: OFF"
boxToggle.Parent = mainFrame

boxToggle.MouseButton1Click:Connect(function()
    boxEnabled = not boxEnabled
    if boxEnabled then
        boxToggle.Text = "3D Box: ON"
        boxToggle.BackgroundColor3 = Color3.fromRGB(70, 120, 70)
    else
        boxToggle.Text = "3D Box: OFF"
        boxToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    end
end)

local reachLabel = Instance.new("TextLabel")
reachLabel.Size = UDim2.new(0, 100, 0, 20)
reachLabel.Position = UDim2.new(0, 10, 0, 85)
reachLabel.BackgroundTransparency = 1
reachLabel.TextColor3 = Color3.new(1,1,1)
reachLabel.Font = Enum.Font.GothamBold
reachLabel.TextSize = 16
reachLabel.Text = "Distance: "..reachDistance
reachLabel.Parent = mainFrame

local sliderFrame = Instance.new("Frame")
sliderFrame.Size = UDim2.new(0, 150, 0, 20)
sliderFrame.Position = UDim2.new(0, 140, 0, 85)
sliderFrame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
sliderFrame.Parent = mainFrame

local sliderBar = Instance.new("Frame")
sliderBar.Size = UDim2.new(reachDistance / reachDistanceMax, 0, 1, 0)
sliderBar.BackgroundColor3 = Color3.fromRGB(150, 150, 250)
sliderBar.Parent = sliderFrame

local sliderHandle = Instance.new("ImageButton")
sliderHandle.Size = UDim2.new(0, 24, 0, 24)
sliderHandle.Position = UDim2.new(reachDistance / reachDistanceMax, -12, 0.5, -12)
sliderHandle.BackgroundColor3 = Color3.fromRGB(180, 180, 255)
sliderHandle.AutoButtonColor = false
sliderHandle.Parent = sliderFrame
sliderHandle.ZIndex = 2

local dragging = false

sliderHandle.MouseButton1Down:Connect(function()
    dragging = true
end)

game:GetService("UserInputService").InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging then
        local mouseLocation = nil
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            mouseLocation = Vector2.new(input.Position.X, input.Position.Y)
        elseif input.UserInputType == Enum.UserInputType.Touch then
            mouseLocation = Vector2.new(input.Position.X, input.Position.Y)
        end

        if mouseLocation then
            local relativePos = mouseLocation.X - sliderFrame.AbsolutePosition.X
            relativePos = math.clamp(relativePos, 0, sliderFrame.AbsoluteSize.X)
            local percent = relativePos / sliderFrame.AbsoluteSize.X
            reachDistance = math.floor(percent * reachDistanceMax)
            if reachDistance < 1 then reachDistance = 1 end

            sliderBar.Size = UDim2.new(percent, 0, 1, 0)
            sliderHandle.Position = UDim2.new(percent, -12, 0.5, -12)
            reachLabel.Text = "Distance: "..reachDistance
        end
    end
end)

local boxPart

runService.RenderStepped:Connect(function()
    if not reachEnabled then return end
    local character = player.Character
    if not character then return end
    local hitParts = e()
    local bodyParts = {"Right Leg", "Left Leg", "Torso", "Head"}

    local effectiveReachDistance = reachDistance * 1.5

    for _, partName in ipairs(bodyParts) do
        local bodyPart = character:FindFirstChild(partName)
        if bodyPart then
            for _, child in ipairs(bodyPart:GetDescendants()) do
                if child:IsA("TouchTransmitter") or child.Name == "TouchInterest" then
                    for _, ball in ipairs(hitParts) do
                        if (ball.Position - bodyPart.Position).Magnitude <= effectiveReachDistance then
                            pcall(function()
                                firetouchinterest(ball, child.Parent, 0)
                                firetouchinterest(ball, child.Parent, 1)
                            end)
                        end
                    end
                end
            end
        end
    end

    if boxEnabled then
        if not boxPart then
            boxPart = Instance.new("Part")
            boxPart.Anchored = true
            boxPart.CanCollide = false
            boxPart.Material = Enum.Material.Neon
            boxPart.Parent = workspace
        end
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local root = player.Character.HumanoidRootPart
            boxPart.Position = root.Position
            local size = reachDistance * 2
            boxPart.Size = Vector3.new(size, size, size)
            boxPart.Color = Color3.new(1,1,1)       -- Beyaz
            boxPart.Transparency = 0.9               -- Şeffaflık
        end
    else
        if boxPart then
            boxPart:Destroy()
            boxPart = nil
        end
    end
end)
